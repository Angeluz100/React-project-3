{"version":3,"sources":["services/firebase.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","login","signInWithPopup","logout","signOut","Header","props","user","displayName","src","photoURL","alt","className","onClick","App","useState","places","place","Comments","newPlace","comments","state","setState","a","fetch","then","res","json","prevState","e","preventDefault","method","headers","body","JSON","stringify","handleChange","target","name","value","useEffect","getAppData","onAuthStateChanged","map","s","onSubmit","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAYAA,IAASC,cATc,CACfC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAKf,IAAMC,EAAW,IAAIR,IAASS,KAAKC,mBAC7BD,EAAOT,IAASS,OAEtB,SAASE,IACLF,EAAKG,gBAAgBJ,GAGzB,SAASK,IACLJ,EAAKK,U,WCJMC,EAjBA,SAACC,GAAD,OACX,mCACI,uDACA,6BAEQA,EAAMC,KACN,qCACI,2CAAcD,EAAMC,KAAKC,eACzB,6BAAI,qBAAKC,IAAKH,EAAMC,KAAKG,SAAUC,IAAKL,EAAMC,KAAKC,gBACnD,oBAAII,UAAU,YAAYC,QAASV,EAAnC,uBAGJ,oBAAIS,UAAU,YAAYC,QAASZ,EAAnC,yB,MCPD,SAASa,IAAO,IAAD,EACFC,mBAAS,CACjCR,KAAM,KACNS,OAAQ,CAAC,CAAEC,MAAO,mBAAoBC,SAAU,0BAChDC,SAAU,CACRF,MAAO,GACPG,SAAU,MANc,mBACrBC,EADqB,KACdC,EADc,iDAU5B,4BAAAC,EAAA,4DACmB,mCADnB,SAEuBC,MADJ,oCACoBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFvD,OAEQX,EAFR,OAGEM,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,IAEPZ,cALJ,4CAV4B,kEA8B5B,WAAwBa,GAAxB,eAAAN,EAAA,yDACOF,EAAMd,KADb,wDAEEsB,EAAEC,iBACe,mCAHnB,SAIsBN,MADH,mCACmB,CAClCO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUd,EAAMF,YAC1BM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAVrB,OAIQV,EAJR,OAWEK,GAAS,SAACM,GAAD,MAAgB,CACvBZ,OAAO,GAAD,mBAAMY,EAAUZ,QAAhB,CAAwBC,IAC9BE,SAAU,CACRF,MAAO,GACPG,SAAU,QAfhB,4CA9B4B,sBAkD5B,SAASgB,EAAaP,GACpBP,GAAS,SAACM,GAAD,mBAAC,eACLA,GADI,IAEPT,SAAS,2BACJS,EAAUT,UADP,kBAELU,EAAEQ,OAAOC,KAAOT,EAAEQ,OAAOE,aAKhC,OAzCAC,qBAAU,YAnBkB,mCAoB1BC,GACA1C,EAAK2C,oBAAmB,SAAAnC,GACpBe,GAAS,SAAAM,GAAS,kCACbA,GADa,IAEhBrB,iBAGL,IAkCD,qCACE,cAAC,EAAD,CAAQA,KAAMc,EAAMd,OACtB,+BACA,oCACGc,EAAML,OAAO2B,KAAI,SAACC,GAAD,OAChB,oCACE,8BAAMA,EAAE3B,QADV,IACuB,8BAAM2B,EAAExB,aADjBwB,EAAE3B,UAKhBI,EAAMd,MACN,qCACF,uBACA,uBAAMsC,SA1EkB,4CA0ExB,UACE,kCACE,yCACA,uBAAOP,KAAK,QAAQC,MAAOlB,EAAMF,SAASF,MAAO6B,SAAUV,OAE7D,kCACE,6CACA,uBAAOE,KAAK,WAAWC,MAAOlB,EAAMF,SAASC,SAAU0B,SAAUV,OAGnE,mEC1FR,IAYeW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71ef640e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n        apiKey: \"AIzaSyBpFZbK00f65IXmR01AT99UAIM4p1HjLPc\",\n        authDomain: \"dream-places.firebaseapp.com\",\n        projectId: \"dream-places\",\n        storageBucket: \"dream-places.appspot.com\",\n        messagingSenderId: \"899080042815\",\n        appId: \"1:899080042815:web:5c92fd36b8a400ee7afb8a\"\n    };\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst auth = firebase.auth();\n\nfunction login() {\n    auth.signInWithPopup(provider);\n}\n\nfunction logout() {\n    auth.signOut();\n}\n\nexport {\n    auth,\n    login,\n    logout,\n}","import { login, logout } from '../../services/firebase';\nconst Header = (props) => (\n    <header>\n        <h1>Dream Places to visit</h1>\n        <ul>\n            {\n                props.user ?\n                <>\n                    <li>Welcome, {props.user.displayName}</li>\n                    <li><img src={props.user.photoURL} alt={props.user.displayName} /></li>\n                    <li className=\"auth-link\" onClick={logout}>Logout</li>\n                </>\n                :\n                <li className=\"auth-link\" onClick={login}>Login</li>\n            }\n        </ul>\n    </header>\n);\nexport default Header;","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header\"\nimport \"./App.css\";\n\nimport { auth } from \".//services/firebase\";\n\nexport default function App() {\n  const [state, setState] = useState({\n    user: null,\n    places: [{ place: \"Whitehaven Beach\", Comments: \"Paradise in Australia\" }],\n    newPlace: {\n      place: \"\",\n      comments: \"\",\n    },\n  });\n\n  async function getAppData() {\n    const BASE_URL = 'http://localhost:3001/api/places';\n    const places = await fetch(BASE_URL).then(res => res.json());\n    setState((prevState) => ({\n      ...prevState,\n      places,\n    }))\n  }\n\n  useEffect(() => {\n    getAppData();\n    auth.onAuthStateChanged(user => {\n        setState(prevState => ({\n          ...prevState,\n          user,\n        }))   \n    })\n  }, []);\n\n\n  async function addPlace(e) {\n    if (!state.user) return;\n    e.preventDefault();\n    const BASE_URL = 'http://localhost:3001/api/places';\n    const place = await fetch(BASE_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'Application/json'\n      },\n      body: JSON.stringify(state.newPlace)\n    }).then(res => res.json());\n    setState((prevState) => ({\n      places: [...prevState.places, place],\n      newPlace: {\n        place: \"\",\n        comments: \"\",\n      },\n    }));\n  }\n\n  function handleChange(e) {\n    setState((prevState) => ({\n      ...prevState, \n      newPlace: {\n        ...prevState.newPlace,\n        [e.target.name]: e.target.value \n      }\n    })) \n  }\n\n  return (\n    <>\n      <Header user={state.user} />\n    <main> \n    <section>\n      {state.places.map((s) => (\n        <article key={s.place}>\n          <div>{s.place}</div> <div>{s.comments}</div>\n        </article>\n      ))}\n      {\n        state.user &&\n        <>\n      <hr />\n      <form onSubmit={addPlace}>\n        <label>\n          <span>Place</span>\n          <input name=\"Place\" value={state.newPlace.place} onChange={handleChange} />\n        </label>\n        <label>\n          <span>Comments </span>\n          <input name=\"Comments\" value={state.newPlace.comments} onChange={handleChange} >\n          </input>\n        </label>\n        <button>Enter New Place</button>\n      </form>\n      </>\n      }\n    </section>\n  </main>\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}